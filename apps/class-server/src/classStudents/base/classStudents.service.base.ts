/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClassStudents as PrismaClassStudents } from "@prisma/client";
import { CreateClassStudentsDto } from "../CreateClassStudentsDto";

export class ClassStudentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClassStudentsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.classStudents.count(args);
  }

  async classStudentsItems(
    args: Prisma.ClassStudentsFindManyArgs
  ): Promise<PrismaClassStudents[]> {
    return this.prisma.classStudents.findMany(args);
  }
  async classStudents(
    args: Prisma.ClassStudentsFindUniqueArgs
  ): Promise<PrismaClassStudents | null> {
    return this.prisma.classStudents.findUnique(args);
  }
  async createClassStudents(
    args: Prisma.ClassStudentsCreateArgs
  ): Promise<PrismaClassStudents> {
    return this.prisma.classStudents.create(args);
  }
  async updateClassStudents(
    args: Prisma.ClassStudentsUpdateArgs
  ): Promise<PrismaClassStudents> {
    return this.prisma.classStudents.update(args);
  }
  async deleteClassStudents(
    args: Prisma.ClassStudentsDeleteArgs
  ): Promise<PrismaClassStudents> {
    return this.prisma.classStudents.delete(args);
  }
  async CreateClassStudent(
    args: CreateClassStudentsDto
  ): Promise<CreateClassStudentsDto> {
    throw new Error("Not implemented");
  }
  async GetClassStudents(args: string): Promise<CreateClassStudentsDto[]> {
    throw new Error("Not implemented");
  }
}
